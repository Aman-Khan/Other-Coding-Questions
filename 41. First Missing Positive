//optimal (sit on your position)
    int firstMissingPositive(vector<int>& nums) {
        int temp[nums.size()];
        fill_n(temp, nums.size(), 0);
        for(int i=0; i<nums.size(); i++){
            if(nums[i]>0 && nums[i]<=nums.size()){
                temp[nums[i]-1]=1;
            }
        }
        for(int i=0; i<nums.size(); i++){
            if(temp[i]!=1) return i+1;
        }
        return nums.size()+1;
      }
//brute force
    int firstMissingPositive(vector<int>& nums) {
        brute force approach
        int fMis=1;
        bool flag=false;
        while(flag==false){
            int i=0;
            int temp=fMis;
            while(i<nums.size()){
                if(fMis==nums[i]){
                    fMis++;
                }
                i++;
            }
            if(fMis==temp) flag=true;
        }
        return fMis;
     }
